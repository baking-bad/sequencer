[workspace]
resolver = "2"

exclude = [
    "external-crates/move/move-execution/v0/move-bytecode-verifier",
    "external-crates/move/move-execution/v0/move-stdlib",
    "external-crates/move/move-execution/v0/move-vm/runtime",
    "external-crates/move/crates/bytecode-interpreter-crypto",
    "external-crates/move/crates/bytecode-interpreter-testsuite",
    "external-crates/move/crates/bytecode-verifier-libfuzzer",
    "external-crates/move/crates/bytecode-verifier-tests",
    "external-crates/move/crates/bytecode-verifier-transactional-tests",
    "external-crates/move/crates/enum-compat-util",
    "external-crates/move/crates/invalid-mutations",
    "external-crates/move/crates/language-benchmarks",
    "external-crates/move/crates/module-generation",
    "external-crates/move/crates/move-abigen",
    "external-crates/move/crates/move-abstract-stack",
    "external-crates/move/crates/move-analyzer",
    "external-crates/move/crates/move-binary-format",
    "external-crates/move/crates/move-borrow-graph",
    "external-crates/move/crates/move-bytecode-source-map",
    "external-crates/move/crates/move-bytecode-utils",
    "external-crates/move/crates/move-bytecode-verifier",
    "external-crates/move/crates/move-bytecode-viewer",
    "external-crates/move/crates/move-cli",
    "external-crates/move/crates/move-command-line-common",
    "external-crates/move/crates/move-compiler",
    "external-crates/move/crates/move-compiler-transactional-tests",
    "external-crates/move/crates/move-core-types",
    "external-crates/move/crates/move-coverage",
    "external-crates/move/crates/move-disassembler",
    "external-crates/move/crates/move-docgen",
    "external-crates/move/crates/move-errmapgen",
    "external-crates/move/crates/move-explain",
    "external-crates/move/crates/move-ir-compiler",
    "external-crates/move/crates/move-ir-compiler-transactional-tests",
    "external-crates/move/crates/move-ir-to-bytecode",
    "external-crates/move/crates/move-ir-to-bytecode-syntax",
    "external-crates/move/crates/move-ir-types",
    "external-crates/move/crates/move-model",
    "external-crates/move/crates/move-package",
    "external-crates/move/crates/move-proc-macros",
    "external-crates/move/crates/move-prover",
    "external-crates/move/crates/move-prover-boogie-backend",
    "external-crates/move/crates/move-prover-test-utils",
    "external-crates/move/crates/move-read-write-set-types",
    "external-crates/move/crates/move-resource-viewer",
    "external-crates/move/crates/move-stackless-bytecode",
    "external-crates/move/crates/move-stackless-bytecode-interpreter",
    "external-crates/move/crates/move-stdlib",
    "external-crates/move/crates/move-symbol-pool",
    "external-crates/move/crates/move-transactional-test-runner",
    "external-crates/move/crates/move-unit-test",
    "external-crates/move/crates/move-vm-config",
    "external-crates/move/crates/move-vm-integration-tests",
    "external-crates/move/crates/move-vm-paranoid-tests",
    "external-crates/move/crates/move-vm-profiler",
    "external-crates/move/crates/move-vm-runtime",
    "external-crates/move/crates/move-vm-test-utils",
    "external-crates/move/crates/move-vm-transactional-tests",
    "external-crates/move/crates/move-vm-types",
    "external-crates/move/crates/prover-mutation",
    "external-crates/move/crates/serializer-tests",
    "external-crates/move/crates/spec-flatten",
    "external-crates/move/crates/test-generation",
]

default-members = [
    "playground"
]

members = [
    "playground",

    "crates/mysten-common",
    "crates/mysten-metrics",
    "crates/mysten-network",
    "crates/mysten-util-mem",
    "crates/mysten-util-mem-derive",
    "crates/prometheus-closure-metric",
    "crates/shared-crypto",
    "crates/sui-enum-compat-util",
    "crates/sui-keys",
    "crates/sui-macros",
    "crates/sui-proc-macros",
    "crates/sui-protocol-config",
    "crates/sui-protocol-config-macros",
    "crates/sui-types",
    "crates/telemetry-subscribers",
    "crates/typed-store",
    "crates/typed-store-derive",

    "narwhal/config",
    "narwhal/crypto",
    "narwhal/executor",
    "narwhal/network",
    "narwhal/node",
    "narwhal/primary",
    "narwhal/storage",
    "narwhal/types",
    "narwhal/worker",
]

[workspace.dependencies]
move-binary-format = { path = "external-crates/move/crates/move-binary-format" }
move-bytecode-utils = { path = "external-crates/move/crates/move-bytecode-utils" }
move-command-line-common = { path = "external-crates/move/crates/move-command-line-common" }
move-core-types = { path = "external-crates/move/crates/move-core-types" }
move-disassembler = { path = "external-crates/move/crates/move-disassembler" }
move-ir-types = { path = "external-crates/move/crates/move-ir-types" }
move-vm-test-utils = { path = "external-crates/move/crates/move-vm-test-utils/", features = ["tiered-gas"] }
move-vm-types = { path = "external-crates/move/crates/move-vm-types" }
move-vm-profiler = { path = "external-crates/move/crates/move-vm-profiler" }

mysten-common = { path = "crates/mysten-common" }
mysten-metrics = { path = "crates/mysten-metrics" }
mysten-network = { path = "crates/mysten-network" }
mysten-util-mem = { path = "crates/mysten-util-mem" }
mysten-util-mem-derive = { path = "crates/mysten-util-mem-derive" }
prometheus-closure-metric = { path = "crates/prometheus-closure-metric" }
shared-crypto = { path = "crates/shared-crypto" }
sui-enum-compat-util = { path = "crates/sui-enum-compat-util" }
sui-keys = { path = "crates/sui-keys" }
sui-macros = { path = "crates/sui-macros" }
sui-proc-macros = { path = "crates/sui-proc-macros" }
sui-protocol-config = { path = "crates/sui-protocol-config" }
sui-protocol-config-macros = { path = "crates/sui-protocol-config-macros" }
sui-types = { path = "crates/sui-types" }
telemetry-subscribers = { path = "crates/telemetry-subscribers" }
typed-store = { path = "crates/typed-store" }
typed-store-derive = { path = "crates/typed-store-derive" }

narwhal-config = { path = "narwhal/config" }
narwhal-crypto = { path = "narwhal/crypto" }
narwhal-executor = { path = "narwhal/executor" }
narwhal-network = { path = "narwhal/network" }
narwhal-node = { path = "narwhal/node" }
narwhal-primary = { path = "narwhal/primary" }
narwhal-storage = { path = "narwhal/storage" }
narwhal-types = { path = "narwhal/types" }
narwhal-worker = { path = "narwhal/worker" }

anemo = { git = "https://github.com/mystenlabs/anemo.git", rev = "1169850e6af127397068cd86764c29b1d49dbe35" }
anemo-build = { git = "https://github.com/mystenlabs/anemo.git", rev = "1169850e6af127397068cd86764c29b1d49dbe35" }
anemo-tower = { git = "https://github.com/mystenlabs/anemo.git", rev = "1169850e6af127397068cd86764c29b1d49dbe35" }
fastcrypto = { git = "https://github.com/MystenLabs/fastcrypto", rev = "802c1ac98061687d6ce024849c747a250dbeea52" }
fastcrypto-tbls = { git = "https://github.com/MystenLabs/fastcrypto", rev = "802c1ac98061687d6ce024849c747a250dbeea52"}
fastcrypto-zkp = { git = "https://github.com/MystenLabs/fastcrypto", rev = "802c1ac98061687d6ce024849c747a250dbeea52", package = "fastcrypto-zkp" }
msim = { git = "https://github.com/MystenLabs/mysten-sim.git", rev = "1a52783d6600ecc22e15253a982f77881bd47c77", package = "msim" }
msim-macros = { git = "https://github.com/MystenLabs/mysten-sim.git", rev = "1a52783d6600ecc22e15253a982f77881bd47c77", package = "msim-macros" }

anyhow = "1.0.71"
arc-swap = { version = "1.5.1", features = ["serde"] }
async-trait = "0.1.61"
atomic_float = "0.1"
axum = { version = "0.6.6", default-features = false, features = ["headers", "tokio", "http1", "http2", "json", "matched-path", "original-uri", "form", "query", "ws"] }
axum-server = { version = "0.5.1", default-features = false, features = ["tls-rustls"] }
backoff = { version = "0.4.0", features = ["futures", "futures-core", "pin-project-lite", "tokio", "tokio_1"] }
base64 = "0.21.2"
bcs = "0.1.4"
bincode = "1.3.3"
bip32 = "0.4.0"
byteorder = "1.4.3"
bytes = "1.4.0"
camino = "1.1.1"
cfg-if = "1.0.0"
clap = { version = "4.4", features = ["derive", "wrap_help"] }
collectable = "0.0.2"
console-subscriber = "0.2"
criterion = { version = "0.5.0", features = ["async", "async_tokio", "html_reports"] }
crossterm = "0.25.0"
dashmap = "5.4.0"
derivative = "2.2.0"
derive_builder = "0.12.0"
derive_more = "0.99.17"
ed25519-consensus = { version = "2.0.1", features = ["serde"] }
enum_dispatch = "^0.3"
eyre = "0.6.8"
fdlimit = "0.2.1"
futures = "0.3.28"
governor = "0.6.0"
hashbrown = "0.12"
hdrhistogram = "7.5.1"
http = "0.2.8"
im = "15"
impl-trait-for-tuples = "0.2.0"
indexmap = { version = "1.9.2", features = ["serde"] }
insta = { version = "1.21.1", features = ["redactions", "yaml", "json"] }
itertools = "0.10.5"
lru = "0.10"
match_opt = "0.1.2"
mockall = "0.11.4"
multiaddr = "0.17.0"
once_cell = "1.18.0"
ouroboros = "0.17"
parking_lot = "0.12.1"
pretty_assertions = "1.3.0"
proc-macro2 = "1.0.47"
prometheus = "0.13.3"
proptest = "1.1.0"
proptest-derive = "0.3.0"
prost = "0.12.1"
prost-build = "0.12.1"
protobuf = { version = "2.28", features = ["with-bytes"] }
protobuf-src = "1.1.0"
quinn-proto = "^0.10.5"
quote = "1.0.23"
rand = "0.8.5"
reqwest = { version = "0.11.20", default_features = false, features = ["blocking", "json", "rustls-tls"] }
roaring = "0.10.1"
rocksdb = { version = "0.21.0", features = ["snappy", "lz4", "zstd", "zlib", "multi-threaded-cf"], default-features = false }
rstest = "0.16.0"
rustversion = "1.0.9"
schemars = { version = "0.8.10", features = ["either"] }
scopeguard = "1.1"
serde = { version = "1.0.144", features = ["derive", "rc"] }
serde_json = { version = "1.0.95", features = ["preserve_order", "arbitrary_precision"] }
serde-name = "0.2.1"
serde-reflection = "0.3.6"
serde_repr = "0.1"
serde_with = { version = "2.1.0", features = ["hex"] }
serde_yaml = "0.8.26"
signature = "1.6.0"
slip10_ed25519 = "0.1.3"
smallvec = "1.10.0"
snap = "1.1.0"
static_assertions = "1.1.0"
strum = { version = "0.24", features = ["derive"] }
strum_macros = "0.24.3"
syn = { version = "1.0.104", features = ["full", "derive", "extra-traits"] }
synstructure = "0.12"
tap = "1.0.1"
tempfile = "3.3.0"
thiserror = "1.0.40"
tiny-bip39 = "1.0.0"
tokio = "1.28.1"
tokio-stream = { version = "0.1.14", features = ["sync", "net"] }
tonic = { version = "0.10", features = ["transport", "tls"] }
tonic-build = { version = "0.10", features = ["prost", "transport"] }
tonic-health = "0.10"
tower = { version = "0.4.12", features = ["full", "util", "timeout", "load-shed", "limit"] }
tower-http = { version = "0.3.4", features = ["cors", "full", "trace", "set-header", "propagate-header"] }
tracing = "0.1.37"
tracing-appender = "0.2.2"
tracing-subscriber = { version = "0.3.15", default-features = false, features = ["std", "smallvec", "fmt", "ansi", "time", "json", "registry", "env-filter"] }
uint = "0.9.4"
url = "2.3.1"
uuid = { version = "1.1.2", features = ["v4", "fast-rng"] }
